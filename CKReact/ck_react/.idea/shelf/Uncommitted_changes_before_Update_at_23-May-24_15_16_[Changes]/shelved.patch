Index: src/components/navigation/NavBar/AdminNavBar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { React, useState, useContext, useEffect } from \"react\";\r\nimport logo from \"../../../assets/images/logo.png\";\r\nimport camp from \"../../../assets/images/camp.png\";\r\nimport userImg from \"../../../assets/images/user.png\";\r\nimport archive from \"../../../assets/images/archive.png\";\r\nimport dashboard from \"../../../assets/images/dashboard.png\";\r\nimport notification from \"../../../assets/images/notification.png\";\r\nimport NavButton from \"../NavButton/NavButton\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\r\nimport LoggedUser from \"../../LoggedUser/LoggedUser\";\r\nimport theme from \"../../../styles/colors\";\r\n\r\nfunction AdminNavBar() {\r\n  const [selectedPage, setSelectedPage] = useState(\"dashboard\");\r\n  const { user, logout } = useAuth();\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n  const { getItem } = useLocalStorage();\r\n\r\n  useEffect(() => {\r\n    let user = getItem(\"user\");\r\n    console.log(user, \"ss\");\r\n    setLoggedIn(user !== null && user !== undefined);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedPage + \" from useEfect\");\r\n  }, [selectedPage]);\r\n\r\n  const handleMouseClick = (event, selected) => {\r\n    console.log(selected);\r\n    setSelectedPage(selected);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loggedIn && (\r\n        <nav\r\n          className=\"flex flex-col  h-screen min-w-60 mr-4\"\r\n          style={{ background: theme.colors.nav_bg }}\r\n        >\r\n          <div className=\"flex flex-col items-center p-2 mt-4\">\r\n            <img src={logo} className=\"w-20 h-20 mr-2\" alt=\"Logo\"></img>\r\n            <p className=\"font-medium text-2xl\">eKamp</p>\r\n          </div>\r\n          <div className=\"flex flex-col justify-between h-full\">\r\n            <div>\r\n              <NavButton\r\n                icon={dashboard}\r\n                text=\"Izvjestaj\"\r\n                isActive={selectedPage === \"dashboard\"}\r\n                to=\"/dashboard\"\r\n                onAction={(event) => handleMouseClick(event, \"dashboard\")}\r\n              ></NavButton>\r\n\r\n              <NavButton\r\n                icon={userImg}\r\n                text=\"Volonter\"\r\n                isActive={selectedPage === \"volunteer\"}\r\n                to=\"/volunteer\"\r\n                onAction={(event) => handleMouseClick(event, \"volunteer\")}\r\n              ></NavButton>\r\n\r\n              <NavButton\r\n                icon={camp}\r\n                text=\"Kampa\"\r\n                isActive={selectedPage === \"camp\"}\r\n                to=\"/camp\"\r\n                onAction={(event) => handleMouseClick(event, \"camp\")}\r\n              ></NavButton>\r\n              <NavButton\r\n                icon={archive}\r\n                text=\"Arhiva\"\r\n                isActive={selectedPage === \"archive\"}\r\n                to=\"/archive\"\r\n                onAction={(event) => handleMouseClick(event, \"archive\")}\r\n              ></NavButton>\r\n              <NavButton\r\n                icon={notification}\r\n                text=\"Obavjestenje\"\r\n                isActive={selectedPage === \"notification\"}\r\n                to=\"/notification\"\r\n                onAction={(event) => handleMouseClick(event, \"notification\")}\r\n              ></NavButton>\r\n            </div>\r\n            <LoggedUser\r\n              logOutAction={(event) => {\r\n                handleMouseClick(event, \"login\");\r\n                logout();\r\n                setLoggedIn(false);\r\n              }}\r\n            ></LoggedUser>\r\n          </div>\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavBar;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/NavBar/AdminNavBar.js b/src/components/navigation/NavBar/AdminNavBar.js
--- a/src/components/navigation/NavBar/AdminNavBar.js	(revision 274bf380ab56abf403fa9ed428b8d5c7458199af)
+++ b/src/components/navigation/NavBar/AdminNavBar.js	(date 1716458523477)
@@ -34,7 +34,7 @@
 
   return (
     <>
-      {loggedIn && (
+      {!loggedIn && (
         <nav
           className="flex flex-col  h-screen min-w-60 mr-4"
           style={{ background: theme.colors.nav_bg }}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1714038248139)
+++ b/.idea/vcs.xml	(date 1714038248139)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1714038248132)
+++ b/.idea/.gitignore	(date 1714038248132)
@@ -0,0 +1,5 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: .idea/ck_react.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/ck_react.iml b/.idea/ck_react.iml
new file mode 100644
--- /dev/null	(date 1714038248124)
+++ b/.idea/ck_react.iml	(date 1714038248124)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/environments/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/environments/index.js b/src/environments/index.js
new file mode 100644
--- /dev/null	(date 1714038248089)
+++ b/src/environments/index.js	(date 1714038248089)
@@ -0,0 +1,18 @@
+import developmentConfig from "./config.development.json";
+import productionConfig from "./config.production.json";
+
+export default () => {
+  switch (process.env.NODE_ENV) {
+    case "development":
+    case "test": {
+      return developmentConfig;
+    }
+    case "production": {
+      return productionConfig;
+    }
+
+    default: {
+      throw new Error("NODE_ENV not being set");
+    }
+  }
+};
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1714038248080)
+++ b/.idea/modules.xml	(date 1714038248080)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/ck_react.iml" filepath="$PROJECT_DIR$/.idea/ck_react.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: src/environments/config.development.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/environments/config.development.json b/src/environments/config.development.json
new file mode 100644
--- /dev/null	(date 1714038248116)
+++ b/src/environments/config.development.json	(date 1714038248116)
@@ -0,0 +1,3 @@
+{
+  "baseServiceUrl": "http://localhost:8080"
+}
\ No newline at end of file
Index: src/services/base.service.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/base.service.js b/src/services/base.service.js
new file mode 100644
--- /dev/null	(date 1714038248109)
+++ b/src/services/base.service.js	(date 1714038248109)
@@ -0,0 +1,30 @@
+import axios from "axios";
+import environment from "../environments";
+
+const baseConfig = {
+  baseURL: environment().baseServiceUrl,
+};
+export default {
+  service: (useAuth) => {
+    const instance = axios.create(baseConfig);
+    instance.defaults.headers.common["Content-Type"] = "application/json";
+    if (useAuth) {
+      instance.interceptors.request.use(
+        async (config) => {
+          const token = sessionStorage.getItem("auth");
+          if (token) {
+            config.headers = {
+              ...config.headers,
+              Authorization: `Bearer ${token}`,
+            };
+          }
+          return config;
+        },
+        (error) => {
+          Promise.reject(error);
+        }
+      );
+    }
+    return instance;
+  },
+};
\ No newline at end of file
Index: src/environments/config.production.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/environments/config.production.json b/src/environments/config.production.json
new file mode 100644
--- /dev/null	(date 1714038248102)
+++ b/src/environments/config.production.json	(date 1714038248102)
@@ -0,0 +1,3 @@
+{
+  "baseServiceUrl": "http://localhost:8080"
+}
\ No newline at end of file
